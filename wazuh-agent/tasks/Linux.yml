---
- include_tasks: "RedHat.yml"
  when: ansible_os_family == "RedHat"

- include_tasks: "Debian.yml"
  when: ansible_os_family == "Debian"

- include_tasks: "installation_from_sources.yml"
  when:
    - wazuh_agent_sources_installation.enabled

- include_tasks: "installation_from_custom_packages.yml"
  when:
    - wazuh_custom_packages_installation_agent_enabled

- name: Linux CentOS/RedHat | Install wazuh-agent
  yum:
    name: wazuh-agent-{{ wazuh_agent_version }}
    state: present
    lock_timeout: '{{ wazuh_agent_yum_lock_timeout }}'
  when:
    - ansible_os_family|lower == "redhat"
    - not wazuh_agent_sources_installation.enabled
    - not wazuh_custom_packages_installation_agent_enabled
  tags:
    - init

- name: Linux Debian | Install wazuh-agent
  apt:
    name: "wazuh-agent={{ wazuh_agent_version }}-*"
    state: present
    cache_valid_time: 3600
  when:
    - ansible_os_family|lower != "redhat"
    - not wazuh_agent_sources_installation.enabled
    - not wazuh_custom_packages_installation_agent_enabled
    - not ansible_check_mode
  tags:
    - init

- name: Linux | Check if client.keys exists
  stat:
    path: "{{ wazuh_dir }}/etc/client.keys"
  register: client_keys_file
  tags:
    - config

- name: Linux | Agent registration via authd
  block:

    - name: Copy CA root certificate to verify authd
      copy:
        src: "{{ wazuh_agent_authd.ssl_agent_ca }}"
        dest: "{{ wazuh_dir }}/etc/{{ wazuh_agent_authd.ssl_agent_ca | basename }}"
        mode: 0644
      when:
        - wazuh_agent_authd.ssl_agent_ca is not none

    - name: Copy TLS/SSL certificate for agent verification
      copy:
        src: "{{ item }}"
        dest: "{{ wazuh_dir }}/etc/{{ item | basename }}"
        mode: 0644
      with_items:
        - "{{ wazuh_agent_authd.ssl_agent_cert }}"
        - "{{ wazuh_agent_authd.ssl_agent_key }}"
      when:
        - wazuh_agent_authd.ssl_agent_cert is not none
        - wazuh_agent_authd.ssl_agent_key is not none

    - name: Linux | Register agent (via authd)
      shell: >
        {{ wazuh_dir }}/bin/agent-auth
        {% if wazuh_agent_authd.agent_name is defined and wazuh_agent_authd.agent_name != None %}
        -A {{ wazuh_agent_authd.agent_name }}
        {% endif %}
        -m {{ wazuh_agent_authd.registration_address }}
        -p {{ wazuh_agent_authd.port }}
        {% if wazuh_agent_nat %} -I "any" {% endif %}
        {% if authd_pass | length > 0 %} -P {{ authd_pass }} {% endif %}
        {% if wazuh_agent_authd.ssl_agent_ca is defined and wazuh_agent_authd.ssl_agent_ca != None %}
        -v "{{ wazuh_dir }}/etc/{{ wazuh_agent_authd.ssl_agent_ca | basename }}"
        {% endif %}
        {% if wazuh_agent_authd.ssl_agent_cert is defined and wazuh_agent_authd.ssl_agent_cert != None %}
        -x "{{ wazuh_dir }}/etc/{{ wazuh_agent_authd.ssl_agent_cert | basename }}"
        {% endif %}
        {% if wazuh_agent_authd.ssl_agent_key is defined and wazuh_agent_authd.ssl_agent_key != None  %}
        -k "{{ wazuh_dir }}/etc/{{ wazuh_agent_authd.ssl_agent_key | basename }}"
        {% endif %}
        {% if wazuh_agent_authd.ssl_auto_negotiate == 'yes' %} -a {% endif %}
        {% if wazuh_agent_authd.groups is defined and wazuh_agent_authd.groups | length > 0 %}
        -G "{{ wazuh_agent_authd.groups | join(',') }}"
        {% endif %}
      register: agent_auth_output
      notify: restart wazuh-agent
      vars:
        agent_name: "{% if single_agent_name is defined %}{{ single_agent_name }}{% else %}{{ ansible_hostname }}{% endif %}"
      when:
        - not client_keys_file.stat.exists or client_keys_file.stat.size == 0
        - wazuh_agent_authd.registration_address is not none

    - name: Linux | Verify agent registration
      shell: echo {{ agent_auth_output }} | grep "Valid key received"
      when:
        - not client_keys_file.stat.exists or client_keys_file.stat.size == 0
        - wazuh_agent_authd.registration_address is not none

  when:
    - wazuh_agent_authd.enable | bool
    - wazuh_agent_config.enrollment.enabled != 'yes'
  tags:
    - config
    - authd

- name: Linux | Agent registration via auto-enrollment
  debug:
    msg: Agent registration will be performed through enrollment option in templated ossec.conf
  when:  wazuh_agent_config.enrollment.enabled == 'yes'

- name: Linux | Ensure group "wazuh" exists
  ansible.builtin.group:
    name: wazuh
    state: present

- name: Linux | Installing agent configuration (ossec.conf)
  template:
    src: var-ossec-etc-ossec-agent.conf.j2
    dest: "{{ wazuh_dir }}/etc/ossec.conf"
    owner: root
    group: wazuh
    mode: 0644
  notify: restart wazuh-agent
  tags:
    - init
    - config

- name: Linux | Installing local_internal_options.conf
  template:
    src: var-ossec-etc-local-internal-options.conf.j2
    dest: "{{ wazuh_dir }}/etc/local_internal_options.conf"
    owner: root
    group: wazuh
    mode: 0640
  notify: restart wazuh-agent
  tags:
    - init
    - config

- name: Create auto-enrollment password file
  template:
    src: authd_pass.j2
    dest: "{{ wazuh_dir }}/etc/authd.pass"
    owner: wazuh
    group: wazuh
    mode: 0640
  when:
    - wazuh_agent_config.enrollment.enabled == 'yes'
    - wazuh_agent_config.enrollment.authorization_pass_path | length > 0
    - authd_pass | length > 0
  tags:
    - config

- name: Linux | Ensure Wazuh Agent service is started and enabled
  service:
    name: wazuh-agent
    enabled: true
    state: started
  tags: config

- include_tasks: "RMRedHat.yml"
  when:
    - ansible_os_family == "RedHat"
    - not wazuh_agent_sources_installation.enabled

- include_tasks: "RMDebian.yml"
  when:
    - ansible_os_family == "Debian"
    - not wazuh_agent_sources_installation.enabled
